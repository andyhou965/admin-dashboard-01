@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap");

:root {
  --color-primary: #6c9bcf;
  --color-danger: #ff0060;
  --color-success: #1b9c85;
  --color-warning: #f7d060;
  --color-white: #fff;
  --color-info-dark: #7d8da1;
  --color-dark: #363949;
  --color-light: rgba(132, 139, 200, 0.18);
  --color-dark-variant: #677483;
  --color-background: #f6f6f9;

  --card-border-radius: 2rem;
  --border-radius-1: 0.4rem;
  --border-radius-2: 1.2rem;

  --card-padding: 1.8rem;
  --padding-1: 1.2rem;

  --box-shadow: 0 2rem 3rem var(--color-light);
}

.dark-mode-variables {
  --color-background: #181a1e;
  --color-white: #202528;
  --color-dark: #edeffd;
  --color-dark-variant: #a3bdcc;
  --color-light: rgba(0, 0, 0, 0.4);
  --box-shadow: 0 2rem 3rem var(--color-light);
}

* {
  margin: 0;
  padding: 0;
  outline: 0;
  appearance: 0;
  border: 0;
  text-decoration: none;
  box-sizing: border-box;
}

html {
  font-size: 14px;
}

body {
  width: 100vw;
  height: 100vh;
  font-family: "Poppins", sans-serif;
  font-size: 0.88rem;
  user-select: none;
  overflow-x: hidden;
  color: var(--color-dark);
  background-color: var(--color-background);
}

a {
  color: var(--color-dark);
}

img {
  display: block;
  width: 100%;
  object-fit: cover;
}

h1 {
  font-weight: 800;
  font-size: 1.8rem;
}

h2 {
  font-weight: 600;
  font-size: 1.4rem;
}

h3 {
  font-weight: 500;
  font-size: 0.87rem;
}

small {
  font-size: 0.76rem;
}

p {
  color: var(--color-dark-variant);
}

b {
  color: var(--color-dark);
}

.text-muted {
  color: var(--color-info-dark);
}

.primary {
  color: var(--color-primary);
}

.danger {
  color: var(--color-danger);
}

.success {
  color: var(--color-success);
}

.warning {
  color: var(--color-warning);
}

.container {
  display: grid;
  width: 96%;
  margin: 0 auto;
  gap: 1.8rem;
  grid-template-columns: 12rem auto 23rem;
  /* 这里的 grid-template-columns 设置了三列：
  第一列宽度为 12rem （rem是相对于根元素（html元素）的字体大小的单位）。
  第二列宽度为 auto，这意味着这一列的宽度会根据剩余空间自动调整。
  第三列宽度为 23rem。*/
}

aside {
  height: 100vh;
}

aside .toggle {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: 1.4rem;
}

aside .toggle .logo {
  display: flex;
  gap: 0.5rem;
}

aside .toggle .logo img {
  width: 2rem;
  height: 2rem;
}

aside .toggle .close {
  padding-right: 1rem;
  display: none;
}

aside .sidebar {
  display: flex;
  flex-direction: column;
  background-color: var(--color-white);
  box-shadow: var(--box-shadow);
  border-radius: 15px;
  height: 88vh;
  position: relative;
  top: 1.5rem;
  transition: all 0.3s ease;
}

aside .sidebar:hover {
  box-shadow: none;
}

aside .sidebar a {
  display: flex;
  align-items: center;
  color: var(--color-info-dark);
  height: 3.7rem;
  gap: 1rem;
  position: relative;
  margin-left: 2rem;
  transition: all 0.3s ease;
}

aside .sidebar a span {
  font-size: 1.6rem;
  transition: all 0.3s ease;
}

aside .sidebar a:last-child {
  position: absolute;
  bottom: 2rem;
  width: 100%;
}

aside .sidebar a.active {
  width: 100%;
  color: var(--color-primary);
  background-color: var(--color-light);
  margin-left: 0;
}

aside .sidebar a.active::before {
  content: "";
  width: 6px;
  height: 18px;
  background-color: var(--color-primary);
}

aside .sidebar a.active span {
  color: var(--color-primary);
  margin-left: calc(1rem - 3px);
}

aside .sidebar a:hover {
  color: var(--color-primary);
}

aside .sidebar a:hover span {
  margin-left: 0.6rem;
}

aside .sidebar .message-count {
  background-color: var(--color-danger);
  padding: 2px 6px;
  color: var(--color-white);
  font-size: 11px;
  border-radius: var(--border-radius-1);
}

main {
  margin-top: 1.4rem;
}

main .analyse {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  /* repeat(3, 1fr) 表示创建三个等宽的列。这里 repeat 函数是一个简化多次重复写同样的值的方法，3 表示重复次数，1fr 是一个灵活的长度单位，表示每列分配容器中可用空间的等份。*/
  gap: 1.6rem;
}

main .analyse > div {
  background-color: var(--color-white);
  padding: var(--card-padding);
  border-radius: var(--card-border-radius);
  margin-top: 1rem;
  box-shadow: var(--box-shadow);
  cursor: pointer;
  transition: all 0.3s ease;
}

main .analyse > div:hover {
  box-shadow: none;
}

main .analyse > div .status {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

main .analyse h3 {
  margin-left: 0.6rem;
  font-size: 1rem;
}

main .analyse .progress {
  position: relative;
  width: 92px;
  height: 92px;
  border-radius: 50%;
}

main .analyse svg {
  width: 7rem;
  height: 7rem;
}

main .analyse svg circle {
  fill: none;
  stroke-width: 10; /* 这个属性定义了图形边框的宽度 */
  stroke-linecap: round; /* 这个属性指定线条末端的形状。round 表示线条的末端是圆形的，这通常用于当线条单独存在时（如线段或路径的起点和终点），给线条一个更平滑、圆润的结束。*/
  transform: translate(5px, 5px);
  /* 这个属性定义了元素的 2D 转换，translate() 方法移动元素，移动的距离由参数定义。translate(5px, 5px) 表示将图形在水平方向（x轴）和垂直方向（y轴）上分别移动5像素 */
}

main .analyse .sales svg circle {
  /* TODO what is the meaing ？ */
  stroke: var(--color-success);
  stroke-dashoffset: -30; /* 这个属性定义了设置SVG的描边中虚线模式开始的位置。*/
  stroke-dasharray: 200; /* 这个属性定义了设置SVG的描边中虚线模式的长度 */
}

main .analyse .visits svg circle {
  stroke: var(--color-danger);
  stroke-dashoffset: -30;
  stroke-dasharray: 200;
}

main .analyse .searches svg circle {
  stroke: var(--color-primary);
  stroke-dashoffset: -30;
  stroke-dasharray: 200;
}

main .analyse .progress .percentage {
  position: absolute;
  top: -3px;
  left: -1px;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
}
